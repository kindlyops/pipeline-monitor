load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@bazel_gazelle//:def.bzl", "gazelle")

# gazelle:prefix github.com/kindlyops/pipeline-monitor
gazelle(name = "gazelle")

go_library(
    name = "go_default_library",
    srcs = [
        "cloudwatchlogs.go",
        "main.go",
    ],
    importpath = "github.com/kindlyops/pipeline-monitor",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/aws/aws-lambda-go/events:go_default_library",
        "//vendor/github.com/aws/aws-lambda-go/lambda:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws/awserr:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws/client:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws/endpoints:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws/session:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/service/cloudwatchlogs:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/service/codebuild:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/service/codepipeline:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/service/secretsmanager:go_default_library",
        "//vendor/github.com/google/go-github/github:go_default_library",
        "//vendor/golang.org/x/oauth2:go_default_library",
    ],
)

# override goos and goarch because this artifact is intended for AWS Lambda
# and must always be compiled for linux_amd64
go_binary(
    name = "pipelinemonitor",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "linux",
    tags = ["manual"],
    visibility = ["//visibility:private"],
)

# using this instead of pkg_zip from rules_pkg because of
# https://github.com/bazelbuild/rules_pkg/pull/97 and
# https://github.com/bazelbuild/rules_pkg/issues/104
genrule(
    name = "lambda_deploy",
    srcs = [":pipelinemonitor"],
    outs = ["lambda_deploy.zip"],
    cmd = "$(location @bazel_tools//tools/zip:zipper) c $@ pipelinemonitor=$(SRCS)",
    tools = ["@bazel_tools//tools/zip:zipper"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    srcs = ["main_test.go"],
    embed = [":go_default_library"],
)
